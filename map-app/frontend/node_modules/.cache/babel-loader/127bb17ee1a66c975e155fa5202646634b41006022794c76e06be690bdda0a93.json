{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDU\\\\Dev_Projects\\\\directions-app\\\\map-app\\\\frontend\\\\src\\\\pages\\\\maps.jsx\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport \"leaflet/dist/leaflet.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Icon } from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Maps() {\n  _s();\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [startCoords, setStartCoords] = useState(null);\n  const [endCoords, setEndCoords] = useState(null);\n  const [routeCoords, setRouteCoords] = useState([]);\n\n  // NEW: track user's live location\n  const [userLocation, setUserLocation] = useState(null);\n\n  // Custom pin icon\n  const customIcon = new Icon({\n    iconUrl: \"/images/location-pin.png\",\n    iconSize: [38, 38]\n  });\n\n  // User's current location marker icon (different color if you want)\n  const userIcon = new Icon({\n    iconUrl: \"/images/current-location.png\",\n    // create or download a blue dot icon\n    iconSize: [30, 30]\n  });\n\n  // Fetch coordinates from OpenCage\n  const fetchCoordinates = async (place, setCoords) => {\n    try {\n      const res = await axios.get(\"https://api.opencagedata.com/geocode/v1/json\", {\n        params: {\n          q: place,\n          key: process.env.REACT_APP_OPENCAGE_API_KEY\n        }\n      });\n      const {\n        lat,\n        lng\n      } = res.data.results[0].geometry;\n      const coords = [lat, lng];\n      setCoords(coords);\n      return coords;\n    } catch (err) {\n      console.error(\"Error fetching coordinates: \", err);\n      return null;\n    }\n  };\n\n  // Fetch route from OpenRouteService\n  const fetchRoute = async (startCoords, endCoords) => {\n    if (!startCoords || !endCoords) return;\n    try {\n      const res = await axios.post(\"https://api.openrouteservice.org/v2/directions/driving-car/geojson\", {\n        coordinates: [[startCoords[1], startCoords[0]],\n        // lng, lat\n        [endCoords[1], endCoords[0]]]\n      }, {\n        headers: {\n          Authorization: process.env.REACT_APP_ORS_API_KEY,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const coords = res.data.features[0].geometry.coordinates.map(c => [c[1], c[0]]);\n      setRouteCoords(coords);\n      const summary = res.data.features[0].properties.summary;\n      alert(`Distance: ${(summary.distance / 1000).toFixed(2)} km, Duration: ${(summary.duration / 60).toFixed(2)} min`);\n    } catch (err) {\n      console.error(\"Error fetching route: \", err);\n    }\n  };\n  const handleSearch = async () => {\n    const startRes = await fetchCoordinates(start, setStartCoords);\n    const endRes = await fetchCoordinates(end, setEndCoords);\n    if (startRes && endRes) {\n      fetchRoute(startRes, endRes);\n    }\n  };\n\n  // NEW: Track user location in realtime\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      console.log(\"Geolocation not supported by your browser\");\n      return;\n    }\n    const watchId = navigator.geolocation.watchPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation([latitude, longitude]);\n    }, error => {\n      console.error(\"Error watching position:\", error);\n    }, {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 5000\n    });\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Start location\",\n      value: start,\n      onChange: e => setStart(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"End location\",\n      value: end,\n      onChange: e => setEnd(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: startCoords || [48.8566, 2.3522],\n      zoom: 13,\n      style: {\n        height: \"80vh\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), startCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: startCoords,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"Start: \", start]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), endCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: endCoords,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"End: \", end]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), routeCoords.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: routeCoords,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 36\n      }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        icon: userIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"You are here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Maps, \"nx9Uthx+gd/0fcR2vR4Orx0H868=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","Polyline","useState","useEffect","axios","Icon","jsxDEV","_jsxDEV","Maps","_s","start","setStart","end","setEnd","startCoords","setStartCoords","endCoords","setEndCoords","routeCoords","setRouteCoords","userLocation","setUserLocation","customIcon","iconUrl","iconSize","userIcon","fetchCoordinates","place","setCoords","res","get","params","q","key","process","env","REACT_APP_OPENCAGE_API_KEY","lat","lng","data","results","geometry","coords","err","console","error","fetchRoute","post","coordinates","headers","Authorization","REACT_APP_ORS_API_KEY","features","map","c","summary","properties","alert","distance","toFixed","duration","handleSearch","startRes","endRes","navigator","geolocation","log","watchId","watchPosition","position","latitude","longitude","enableHighAccuracy","maximumAge","timeout","clearWatch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","center","zoom","style","height","width","attribution","url","icon","length","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/SIDDU/Dev_Projects/directions-app/map-app/frontend/src/pages/maps.jsx"],"sourcesContent":["import '../App.css';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { Icon } from 'leaflet';\r\n\r\nfunction Maps() {\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n  const [startCoords, setStartCoords] = useState(null);\r\n  const [endCoords, setEndCoords] = useState(null);\r\n  const [routeCoords, setRouteCoords] = useState([]);\r\n\r\n  // NEW: track user's live location\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  // Custom pin icon\r\n  const customIcon = new Icon({\r\n    iconUrl: \"/images/location-pin.png\",\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  // User's current location marker icon (different color if you want)\r\n  const userIcon = new Icon({\r\n    iconUrl: \"/images/current-location.png\", // create or download a blue dot icon\r\n    iconSize: [30, 30],\r\n  });\r\n\r\n  // Fetch coordinates from OpenCage\r\n  const fetchCoordinates = async (place, setCoords) => {\r\n    try {\r\n      const res = await axios.get(\"https://api.opencagedata.com/geocode/v1/json\", {\r\n        params: {\r\n          q: place,\r\n          key: process.env.REACT_APP_OPENCAGE_API_KEY,\r\n        },\r\n      });\r\n      const { lat, lng } = res.data.results[0].geometry;\r\n      const coords = [lat, lng];\r\n      setCoords(coords);\r\n      return coords;\r\n    } catch (err) {\r\n      console.error(\"Error fetching coordinates: \", err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Fetch route from OpenRouteService\r\n  const fetchRoute = async (startCoords, endCoords) => {\r\n    if (!startCoords || !endCoords) return;\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://api.openrouteservice.org/v2/directions/driving-car/geojson\",\r\n        {\r\n          coordinates: [\r\n            [startCoords[1], startCoords[0]], // lng, lat\r\n            [endCoords[1], endCoords[0]],\r\n          ],\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: process.env.REACT_APP_ORS_API_KEY,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const coords = res.data.features[0].geometry.coordinates.map(\r\n        (c) => [c[1], c[0]]\r\n      );\r\n\r\n      setRouteCoords(coords);\r\n\r\n      const summary = res.data.features[0].properties.summary;\r\n      alert(\r\n        `Distance: ${(summary.distance / 1000).toFixed(2)} km, Duration: ${(summary.duration / 60).toFixed(2)} min`\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error fetching route: \", err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    const startRes = await fetchCoordinates(start, setStartCoords);\r\n    const endRes = await fetchCoordinates(end, setEndCoords);\r\n\r\n    if (startRes && endRes) {\r\n      fetchRoute(startRes, endRes);\r\n    }\r\n  };\r\n\r\n  // NEW: Track user location in realtime\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      console.log(\"Geolocation not supported by your browser\");\r\n      return;\r\n    }\r\n\r\n    const watchId = navigator.geolocation.watchPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error watching position:\", error);\r\n      },\r\n      {\r\n        enableHighAccuracy: true,\r\n        maximumAge: 0,\r\n        timeout: 5000,\r\n      }\r\n    );\r\n\r\n    return () => navigator.geolocation.clearWatch(watchId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Route Finder</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Start location\"\r\n        value={start}\r\n        onChange={(e) => setStart(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"End location\"\r\n        value={end}\r\n        onChange={(e) => setEnd(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Find</button>\r\n\r\n      <MapContainer\r\n        center={startCoords || [48.8566, 2.3522]}\r\n        zoom={13}\r\n        style={{ height: \"80vh\", width: \"100%\" }}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        {startCoords && (\r\n          <Marker position={startCoords} icon={customIcon}>\r\n            <Popup>Start: {start}</Popup>\r\n          </Marker>\r\n        )}\r\n        {endCoords && (\r\n          <Marker position={endCoords} icon={customIcon}>\r\n            <Popup>End: {end}</Popup>\r\n          </Marker>\r\n        )}\r\n        {routeCoords.length > 0 && <Polyline positions={routeCoords} color=\"blue\" />}\r\n\r\n        {/* NEW: User's realtime location marker */}\r\n        {userLocation && (\r\n          <Marker position={userLocation} icon={userIcon}>\r\n            <Popup>You are here</Popup>\r\n          </Marker>\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Maps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}