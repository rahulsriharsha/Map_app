{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDU\\\\Dev_Projects\\\\directions-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { Icon, divIcon, point, popup } from 'leaflet';\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n// import { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Markers\n  const markers = [{\n    geocode: [48.86, 2.3522],\n    popup: \"Hello, I am popup 1\"\n  }, {\n    geocode: [48.85, 2.3522],\n    popup: \"Hello, I am popup 2\"\n  }, {\n    geocode: [48.855, 2.34],\n    popup: \"Hello, I am popup 3\"\n  }];\n  const customIcon = new Icon({\n    iconUrl: \"/images/location-pin.png\",\n    iconSize: [38, 38] // size of the icon\n  });\n  const createCustomClusterIcon = cluster => {\n    return new divIcon({\n      html: `<div class=\"cluster-icon\">${cluster.getChildCount()}</div>`,\n      className: \"custom-marker-cluster\",\n      iconSize: point(33, 33, true)\n    });\n  };\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [startCoords, setStartCoords] = useState(\"\");\n  const [endCoords, setEndCoords] = useState(\"\");\n  const [routeCoords, setRouteCoords] = useState([]);\n  const createdMarkers = [{\n    geocode: startCoords,\n    popup: \"I am the starting location\"\n  }, {\n    geocode: endCoords,\n    popup: \"I am the destination\"\n  }];\n  const fetchCoordinates = async (place, setCoords) => {\n    try {\n      const res = await axios.get(\"https://api.opencagedata.com/geocode/v1/json\", {\n        params: {\n          q: place,\n          key: \"ecf2d9c5db294d8eaf318a95ded1eacd\"\n        }\n      });\n      const {\n        lat,\n        lng\n      } = res.data.results[0].geometry;\n      setCoords([lat, lng]);\n    } catch (err) {\n      console.error(\"Error fetching coordinates: \", err);\n    }\n  };\n  const fetchRoute = async (startCoords, endCoords) => {\n    if (!startCoords || !endCoords) return;\n    try {\n      const res = await axios.post(\"https://api.openrouteservice.org/v2/directions/driving-car/geojson\", {\n        coordinates: [[startCoords[1], startCoords[0]],\n        //lng, ltn\n        [endCoords[1], endCoords[0]]]\n      }, {\n        headers: {\n          Authorization: \"eyJvcmciOiI1YjNjZTM1OTc4NTExMTAwMDFjZjYyNDgiLCJpZCI6IjkxM2ZjNTM1MjZhMjQ3ZjRiNjdlODI0ZDk4NjY0YmYwIiwiaCI6Im11cm11cjY0In0=\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const coords = res.data.features[0].geometry.coordinates.map(c => [c[1], c[0]] //Flip lng/lat -> lat/lng\n      );\n      setRouteCoords(coords);\n      const summary = res.data.features[0].properties.summary;\n      alert(`Distance: ${(summary.distance / 1000).toFixed(2)} km, Duration: ${(summary.duration / 60).toFixed(2)} min`);\n    } catch (err) {\n      console.error(\"Error fetching route: \", err);\n    }\n  };\n  const fetchDistance = async (startCoords, endCoords) => {\n    if (!startCoords || !endCoords) return;\n    try {\n      const res = await axios.post(\"https://api.openrouteservice.org/v2/directions/driving-car/geojson\", {\n        coordinates: [[startCoords[1], startCoords[0]],\n        //lng, ltn\n        [endCoords[1], endCoords[0]]]\n      }, {\n        headers: {\n          Authorization: \"eyJvcmciOiI1YjNjZTM1OTc4NTExMTAwMDFjZjYyNDgiLCJpZCI6IjkxM2ZjNTM1MjZhMjQ3ZjRiNjdlODI0ZDk4NjY0YmYwIiwiaCI6Im11cm11cjY0In0=\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const coords = res.data.features[0].geometry.coordinates.map(c => [c[1], c[0]] //Flipping lat & lng\n      );\n      setRouteCoords(coords);\n      const summary = res.data.features[0].properties.summary;\n      const Distance = summary.distance / 1000;\n      return Distance;\n    } catch (err) {\n      console.error(\"Error returning the distance: \", err);\n    }\n  };\n  const handleSearch = async () => {\n    await fetchCoordinates(start, setStartCoords);\n    await fetchCoordinates(end, setEndCoords);\n\n    // Fetch route slightly late (after coords are set)\n    setTimeout(() => {\n      if (startCoords && endCoords) {\n        fetchRoute(startCoords, endCoords);\n      }\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Start location\",\n      value: start,\n      onChange: e => setStart(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"End location\",\n      value: end,\n      onChange: e => setEnd(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [48.8566, 2.3522],\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), startCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: startCoords,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"Start: \", start]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), endCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: endCoords,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"End: \", end]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), routeCoords.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: routeCoords,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        iconCreateFunction: createCustomClusterIcon,\n        children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.geocode,\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: marker.popup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QUagPeWkrOWUb1/CQAOPk8V+Akg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","Polyline","useState","axios","Icon","divIcon","point","popup","MarkerClusterGroup","jsxDEV","_jsxDEV","App","_s","markers","geocode","customIcon","iconUrl","iconSize","createCustomClusterIcon","cluster","html","getChildCount","className","start","setStart","end","setEnd","startCoords","setStartCoords","endCoords","setEndCoords","routeCoords","setRouteCoords","createdMarkers","fetchCoordinates","place","setCoords","res","get","params","q","key","lat","lng","data","results","geometry","err","console","error","fetchRoute","post","coordinates","headers","Authorization","coords","features","map","c","summary","properties","alert","distance","toFixed","duration","fetchDistance","Distance","handleSearch","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","center","zoom","attribution","url","position","icon","length","positions","color","chunkedLoading","iconCreateFunction","marker","_c","$RefreshReg$"],"sources":["C:/Users/SIDDU/Dev_Projects/directions-app/frontend/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { Icon, divIcon, point, popup } from 'leaflet';\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\n// import { useState } from 'react';\n\nfunction App() {\n  // Markers\n  const markers = [\n    {\n      geocode: [48.86, 2.3522],\n      popup: \"Hello, I am popup 1\"\n    },\n    {\n      geocode: [48.85, 2.3522],\n      popup: \"Hello, I am popup 2\"\n    },\n    {\n      geocode: [48.855, 2.34],\n      popup: \"Hello, I am popup 3\"\n    }\n  ]\n\n  const customIcon = new Icon ({\n    iconUrl: \"/images/location-pin.png\",\n    iconSize: [38, 38], // size of the icon\n  })\n\n  const createCustomClusterIcon = (cluster) => {\n    return new divIcon({\n      html: `<div class=\"cluster-icon\">${cluster.getChildCount()}</div>`,\n      className: \"custom-marker-cluster\",\n      iconSize: point(33, 33, true)\n    });\n  };\n\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [startCoords, setStartCoords] = useState(\"\");\n  const [endCoords, setEndCoords] = useState(\"\");\n  const [routeCoords, setRouteCoords] = useState([]);\n\n  const createdMarkers = [\n    {\n      geocode: startCoords,\n      popup: \"I am the starting location\"\n    },\n    {\n      geocode: endCoords,\n      popup: \"I am the destination\"\n    }\n  ]\n\n  const fetchCoordinates = async (place, setCoords) => {\n    try{\n      const res = await axios.get(\"https://api.opencagedata.com/geocode/v1/json\", {\n        params: {\n          q: place,\n          key: \"ecf2d9c5db294d8eaf318a95ded1eacd\",\n        },\n      });\n      const { lat, lng } = res.data.results[0].geometry;\n      setCoords([lat, lng]);\n    } catch(err) {\n      console.error(\"Error fetching coordinates: \", err);\n    }\n  };\n\n  const fetchRoute = async (startCoords, endCoords) => {\n    if(!startCoords || !endCoords) return;\n    try{\n      const res = await axios.post(\n        \"https://api.openrouteservice.org/v2/directions/driving-car/geojson\",\n        {\n          coordinates:[\n            [startCoords[1], startCoords[0]], //lng, ltn\n            [endCoords[1], endCoords[0]]\n          ]\n        },\n        {\n          headers: {\n            Authorization: \"eyJvcmciOiI1YjNjZTM1OTc4NTExMTAwMDFjZjYyNDgiLCJpZCI6IjkxM2ZjNTM1MjZhMjQ3ZjRiNjdlODI0ZDk4NjY0YmYwIiwiaCI6Im11cm11cjY0In0=\",\n            \"Content-Type\": \"application/json\"\n          },\n        }\n      );\n\n      const coords = res.data.features[0].geometry.coordinates.map(\n        (c) => [c[1], c[0]] //Flip lng/lat -> lat/lng\n      );\n\n      setRouteCoords(coords);\n\n      const summary = res.data.features[0].properties.summary;\n      alert(\n        `Distance: ${(summary.distance / 1000).toFixed(2)} km, Duration: ${(summary.duration / 60).toFixed(2)} min`\n      );\n\n    } catch (err) {\n      console.error(\"Error fetching route: \", err);\n    }\n  };\n\n  const fetchDistance = async (startCoords, endCoords) => {\n    if(!startCoords || !endCoords) return;\n    try{\n      const res = await axios.post(\n        \"https://api.openrouteservice.org/v2/directions/driving-car/geojson\",\n        {\n          coordinates:[\n            [startCoords[1], startCoords[0]], //lng, ltn\n            [endCoords[1], endCoords[0]]\n          ]\n        },\n        {\n          headers:{\n            Authorization: \"eyJvcmciOiI1YjNjZTM1OTc4NTExMTAwMDFjZjYyNDgiLCJpZCI6IjkxM2ZjNTM1MjZhMjQ3ZjRiNjdlODI0ZDk4NjY0YmYwIiwiaCI6Im11cm11cjY0In0=\",\n            \"Content-Type\": \"application/json\"\n          },\n        }\n      );\n\n      const coords = res.data.features[0].geometry.coordinates.map(\n        (c) => [c[1], c[0]] //Flipping lat & lng\n      );\n\n      setRouteCoords(coords);\n      const summary = res.data.features[0].properties.summary;\n      const Distance = summary.distance/1000;\n      return Distance;\n    } catch (err){\n      console.error(\"Error returning the distance: \", err);\n    }\n  };\n\n  const handleSearch = async () => {\n    await fetchCoordinates(start, setStartCoords);\n    await fetchCoordinates(end, setEndCoords);\n\n    // Fetch route slightly late (after coords are set)\n    setTimeout(() => {\n      if(startCoords && endCoords) {\n        fetchRoute(startCoords, endCoords);\n      }\n    }, 1000);\n  };\n\n  return(\n    <div>\n      <h2>Route Finder</h2>\n      <input\n        type='text'\n        placeholder='Start location'\n        value={start}\n        onChange={(e) => setStart(e.target.value)}\n      />\n      <input\n        type='text'\n        placeholder='End location'\n        value={end}\n        onChange={(e) => setEnd(e.target.value)}\n      />\n      <button onClick={handleSearch}>Find</button>\n\n      <MapContainer center={[48.8566,2.3522]} zoom={13}>\n        <TileLayer\n          attribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {/* <TileLayer\n          attribution = 'Esri'\n          url = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png'\n          // onClick={(e) => {\n          //   console.log(e);\n          // }}\n        /> */}\n\n        {startCoords && (\n          <Marker position={startCoords} icon={customIcon}>\n            <Popup>Start: {start}</Popup>\n          </Marker>\n        )}\n        {endCoords && (\n          <Marker position={endCoords} icon={customIcon}>\n            <Popup>End: {end}</Popup>\n          </Marker>\n        )}\n\n        {routeCoords.length > 0 && (\n          <Polyline\n            positions={routeCoords} color='blue'\n          />\n        )}\n        \n\n        <MarkerClusterGroup\n          chunkedLoading\n          iconCreateFunction={createCustomClusterIcon}\n        >\n          {markers.map(marker => (\n            <Marker position={marker.geocode} icon={customIcon}>\n              <Popup>\n                <h4>\n                  {marker.popup}\n                </h4>\n              </Popup>\n            </Marker>\n          ))}\n        </MarkerClusterGroup> \n      </MapContainer>\n    </div>\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}